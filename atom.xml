<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2017-09-15T03:04:35.507Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>朱宇琦</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>H5 APP</title>
    <link href="http://yoursite.com/2017/09/15/H5-APP/"/>
    <id>http://yoursite.com/2017/09/15/H5-APP/</id>
    <published>2017-09-15T02:08:09.000Z</published>
    <updated>2017-09-15T03:04:35.507Z</updated>
    
    <content type="html"><![CDATA[<p>在接触HTML5 应用程序之前，我一直以为一名前端眼里的只有网页和浏览器。而这样的“短见”也使一直我不明白W3C引入的新HTML5特性有什么用，直到有一天被人聊起HTML5移动端开发的话题，我突然意识到也许我从一开始就找差了门在哪里。</p><p>在那以后我重新浏览了W3C的官方文档，带着HTML5移动web 程序开发的问题，以前陌生的技术词汇突然使我豁然开朗。也许离融会贯通还有很远的距离，但欣慰的是，我已经摸到了门把手。</p><a id="more"></a><h2 id="HTML5应用程序的引入"><a href="#HTML5应用程序的引入" class="headerlink" title="HTML5应用程序的引入"></a>HTML5应用程序的引入</h2><p>在w3c的文档中看到这么一句：<img src="http://a3.qpic.cn/psb?/V11VL1oT33jaK6/Q6CRgcrED9FSZWF*rxCVuYgdpaKbdY8b0RDIb0r0.vA!/b/dPIAAAAAAAAA&amp;bo=WwLIAFsCyAARCT4!&amp;rf=viewer_4" alt="">这说明在HTML5出现之前，就已经有了web应用程序一说，那么web应用程序是什么呢？</p><p>顾名思义，web应用是运行在web上的应用程序。用户只需要有浏览器即可访问，不需要再安装其他软件。这种模式一般被称为B/S（Browser/Server，浏览器-服务器）模式的应用。与之对应的是C/S（Client/Server，客户端-服务端）模式的应用。</p><p>Web应用程序从本质上是“应用程序”，和用标准的程序语言，如C、C++等编写出来的程序没有什么不同。区别在于C/S模式的应用程序一般独立运行，而B/S模式的应用浏览器来运行。<br>因此，两者的区别很简单：</p><ul><li>从使用角度上：web应用程序打开浏览器即可访问，而C/S模式的应用要安装专门的客户端。</li><li>从技术角度上：web应用基于标准的应用层协议HTTP，而C/S模式的应用是基于网络协议层TCP/UDP的。</li></ul><h4 id="补充知识："><a href="#补充知识：" class="headerlink" title="补充知识："></a>补充知识：</h4><blockquote><p>应用层协议是定义在网络协议层之上的，正是由于web应用采用的是更高层次的标准化通信模式，所以web应用能够获得更快的普及和推广。</p></blockquote><h4 id="同样通过浏览器打开的网站和web应用程序有什么区别呢？"><a href="#同样通过浏览器打开的网站和web应用程序有什么区别呢？" class="headerlink" title="同样通过浏览器打开的网站和web应用程序有什么区别呢？"></a>同样通过浏览器打开的网站和web应用程序有什么区别呢？</h4><blockquote><p>个人觉得，由于网站的各个网页之间可以使用&lt;a&gt;标签实现跳转，当向一个服务器发送完请求，服务器将请求的该网站站点文件发回本地客户端，之后所有的访问都可以在本地完成，直到下一次客户端对服务器发起请求。那么也许可以这样理解：一个web应用程序是一个能够让用户完成某些特定任务的网站。而一个普通的网站的主要目标是给用户提供信息(博客，新闻，指导，等)。</p></blockquote><h2 id="HTML5应用的特点"><a href="#HTML5应用的特点" class="headerlink" title="HTML5应用的特点"></a>HTML5应用的特点</h2><p>W3C的官方文档中这样描述：<img src="http://a3.qpic.cn/psb?/V11VL1oT33jaK6/ycs05c03Lx2.o.3uonef1Ub3ga1*SqlRmuYtHbtyNwY!/b/dPIAAAAAAAAA&amp;bo=MgI7ATICOwEDACU!&amp;rf=viewer_4" alt="">以上这些是HTML5的新特性，具体可以从以下方面理解。</p><h4 id="Web存储"><a href="#Web存储" class="headerlink" title="Web存储"></a>Web存储</h4><p>HTML5之前，客户端的数据存储都由cookie完成，但cookie不适合大量数据存储，而且速度慢，效率低。</p><p>HTML5的出现带来两种新的数据存储方法：</p><ol><li>localStorage：数据存储没有时间显示，第二天、第二周或下一年之后，数据依然可用。</li><li>sessionStorage：用户关闭浏览器窗口时，将数据删除。</li></ol><h4 id="访问本地文件"><a href="#访问本地文件" class="headerlink" title="访问本地文件"></a>访问本地文件</h4><p>HTML引入了本地文件系统API-File System API，包括本地文件的读取、写入，监视进度等。具体问题可以参考这篇文章：<a href="http://blog.csdn.net/salonzhou/article/details/28275713" target="_blank" rel="external">HTML5之本地文件系统API - File System API</a>。</p><h4 id="本地SQL数据"><a href="#本地SQL数据" class="headerlink" title="本地SQL数据"></a>本地SQL数据</h4><p>HTML5本地SQL数据库的引入，实现了像访问本地文件那样轻松的对内置数据库进行直接访问。<a href="http://blog.csdn.net/u013991521/article/details/51330260" target="_blank" rel="external">HTML5教程之html 5 本地数据库（Web Sql Database）</a>。</p><h4 id="缓存引用"><a href="#缓存引用" class="headerlink" title="缓存引用"></a>缓存引用</h4><p>w3c官方文档这样描述：<br>使用 HTML5，通过创建cache manifest 文件，可以轻松地创建 web 应用的离线版本。</p><p>应用程序缓存为应用带来三个优势：</p><ol><li>离线浏览 - 用户可在应用离线时使用它们</li><li>速度 - 已缓存资源加载得更快</li><li>减少服务器负载 - 浏览器将只从服务器下载更新过或更改过的资源。</li></ol><h4 id="JavaScript工作者"><a href="#JavaScript工作者" class="headerlink" title="JavaScript工作者"></a>JavaScript工作者</h4><p>这部分不知何意。。。</p><h4 id="xmlhttprequest2"><a href="#xmlhttprequest2" class="headerlink" title="xmlhttprequest2"></a>xmlhttprequest2</h4><p>xmlhttprequest2引入了大量的新功能（例如跨源请求、上传进度事件以及对上传/下载二进制数据的支持等）。</p><p>大概是以下意思：</p><ol><li>可以设置HTTP请求的时限。</li><li>可以使用FormData对象管理表单数据。</li><li>可以上传文件。</li><li>可以请求不同域名下的数据（跨域请求）。</li><li>可以获取服务器端的二进制数据。</li><li>可以获得数据传输的进度信息。</li></ol><h2 id="HTML5应用程序的开发"><a href="#HTML5应用程序的开发" class="headerlink" title="HTML5应用程序的开发"></a>HTML5应用程序的开发</h2><p>HTML5由于没有脱离浏览器的使用环境，所以HTML5应用程序的的开发依然是基于html、css和JavaScript的开发。<br>在本文第一张图中有这么一句：<br><img src="http://a3.qpic.cn/psb?/V11VL1oT33jaK6/RShU23giHkjFwrrbybbFCnraHzeSHJ8KQkI85TOn9mA!/b/dGoBAAAAAAAA&amp;bo=WgIiAFoCIgADACU!&amp;rf=viewer_4" alt="">因此，HTML5应用程序的开发必定要考虑响应式布局、移动端适配的问题。</p><p>选用合适的开发工具可以极大地缩短开发时间，网上提供了非常多的在线开发工具以及框架，但这些工具、框架存在的工性问题是个性化更能实现受限，可以作为展示，不能成为一个企业赖以生存的产品。</p><p>个人而言，采用最原始的开发过程可以解决使用别人工具时存在的其他隐患，而且可以保证工具更换时产品的可持续性。</p><h2 id="Hybrid-app"><a href="#Hybrid-app" class="headerlink" title="Hybrid app"></a>Hybrid app</h2><p>Hybrid app是指介于NativeAPP和web APP之间的APP，不用像native app那样下载客户端，并得经常更新，也不用像web app那样，每次访问跟访问网页一样用户体验不高。这篇文章里有技术层次的比较：<a href="http://www.uisdc.com/web-hybrid-native-app" target="_blank" rel="external">WEB APP、HYBRID APP与NATIVE APP的设计差异</a></p><h2 id="从HTML5应用程序到Hybrid-APP"><a href="#从HTML5应用程序到Hybrid-APP" class="headerlink" title="从HTML5应用程序到Hybrid APP"></a>从HTML5应用程序到Hybrid APP</h2><p>由于hybrid App在技术上可以由webapp直接转化而来（利用工具将开发web APP的HTML、css、js文件导入生成移动端的app、apk文件即可，这样的工具网上很多）。</p><p>hybrid APP的开发工具和框架有很多，而且各有各的特色，在选择上我觉得在于团队的需要，个人的话无所谓，比较感兴趣的有jQuery mobile、Vue、reactnative。</p><p>三者的一句话解释：</p><ol><li>jQuery mobile：基于jQuery构建，是一个为触控优化的框架，用于创建移动 web 应用程序。适用于所有流行的智能手机和平板电脑。</li><li>Vue js：Vue js的移动端开发主要用了vue-router,一般用于构建单页应用，具体原理是通过组合组件来组成应用程序。</li><li>react native：reactnative是react的框架的衍生品，它希望用写WebApp的方式去写Native App，目前支持iOS和安卓两大平台，熟悉Web前端开发的技术人员只需很少的学习就可以进入移动应用开发领域。</li></ol><h2 id="UI、框架和工具"><a href="#UI、框架和工具" class="headerlink" title="UI、框架和工具"></a>UI、框架和工具</h2><p>UI和工具在广义上应当都属于框架范畴，只不过UI注重用户视觉体验，工具注重从无到有的具体过程，框架则是技术方面的底层实现。</p><p>其他的内容没必要深究。</p><p>H5出现以前，网页上的动画效果可以通过各种JS的框架实现。H5出现以后，我一直以为其主要内容就是CSS3的动画引入，不用再写那么复杂的JS代码，直到有一天我了解了H5引入的众多API接口，我才意识到，我一直舍本逐末追逐了错误的东西。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在接触HTML5 应用程序之前，我一直以为一名前端眼里的只有网页和浏览器。而这样的“短见”也使一直我不明白W3C引入的新HTML5特性有什么用，直到有一天被人聊起HTML5移动端开发的话题，我突然意识到也许我从一开始就找差了门在哪里。&lt;/p&gt;
&lt;p&gt;在那以后我重新浏览了W3C的官方文档，带着HTML5移动web 程序开发的问题，以前陌生的技术词汇突然使我豁然开朗。也许离融会贯通还有很远的距离，但欣慰的是，我已经摸到了门把手。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>漫谈开发环境</title>
    <link href="http://yoursite.com/2017/09/12/%E6%BC%AB%E8%B0%88%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83/"/>
    <id>http://yoursite.com/2017/09/12/漫谈开发环境/</id>
    <published>2017-09-12T04:23:19.000Z</published>
    <updated>2017-09-12T06:09:34.285Z</updated>
    
    <content type="html"><![CDATA[<p>开发环境很容易让新手误解，以为说的是我上班的地方环境是什么样子。其实我觉得这没什么问题，个体本身以外的一切都是环境，大到公司氛围，小到电脑和眼睛之间的距离都是开发环境。只是这样说不免使行家笑掉大牙，毕竟都是搞技术的牛人，倒立着都能开发，这些小事算得了什么。</p><p>当然，工资这个环境还得另说。</p><a id="more"></a><p>为了不让人笑掉大牙，毕竟牙医是一份赚钱很高的工资，还是从专业的角度谈谈开发环境的问题。</p><h2 id="开发的问题"><a href="#开发的问题" class="headerlink" title="开发的问题"></a>开发的问题</h2><p>网上第一次出现《盗墓笔记》IP的时候我是一脸懵逼，IP不是网络地址吗，就算是域名也是数字与英文的格式啊，中文这是祖国这么强大了吗？</p><p>后来发现原来是吃了没文化的亏，时代发展了，知识产权不叫知识产权，叫IP了。</p><p>编程也不叫编程，叫开发了。</p><p>古人喜欢对自己的美誉体现自己的高风亮节，现代人笑话“君子固穷”的笑话，但本质上还是喜欢被称呼的高大上一些。开发工程师总比编程工程师体现得光鲜亮丽得多。</p><p>玩笑归玩笑，但把开发比作编程还是不准确的，如果说开发是实现一个从无到有的过程，编程应该在这个过程里没有了开端，也没有了结局。</p><p>搞技术不是死钻牛角尖，这些问题不探讨也罢，探讨是因为“咬文嚼字”是朱光潜艺术的完美。</p><p>编程就是一门艺术。</p><h2 id="平台的选择"><a href="#平台的选择" class="headerlink" title="平台的选择"></a>平台的选择</h2><p>听说macOS是最好的开发平台，但穷人一个一把都没摸过，用过Linux的Ubuntu系统，最后因为复杂的权限问题放弃了。</p><p>win10是我用过最好用的操作系统。</p><p>其实不然，我纯粹是视觉享受党，喜欢这种扁平化的风格。这一定程度上是我选择web前端的原因。不搞美工是因为我怕成为灵魂画师。</p><p>要是你愿意，xp应该是比win10更好的开发环境系统。</p><p>只是我没用过。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p>我意识到开发环境不是下载安装软件时，我还没因为我的言论丢过人，所以这点我还是很庆幸的。</p><p>不过接下来我说的话可能会成为将来的笑柄。</p><p>但是有什么关系呢，我也很不想被你笑话啊，可是有什么办法呢。</p><h3 id="nodejs的安装"><a href="#nodejs的安装" class="headerlink" title="nodejs的安装"></a>nodejs的安装</h3><p>听说nodejs是运行在服务器上的js脚本语言，这是什么意思呢：</p><blockquote><p>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。</p></blockquote><p>反正我看不懂，倒是这一句很关键：</p><blockquote><p>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p></blockquote><h3 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h3><p>如前面的引用，npm是全球最大的开源库生态系统，所以你可以用它安装很多开源库。</p><p>比如这个放在GitHub上的博客，先是用了GitHub pages的博客功能，然后通过npm安装了hexo搭建博客框架，再在hexo的主题里选择了自己喜欢的一个。</p><p>另外由于不会配置，就用了人家的默认功能。</p><h3 id="git"><a href="#git" class="headerlink" title="git"></a>git</h3><p>为了我的本地hexo博客和远程GitHub关联起来，还安装了git软件，以使用鼠标右键点击时出现的git bash功能。</p><p>至此我的开发环境就搭建完了。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>我猜有人看到上面一句一定会骂这是什么狗屁环境搭建，毛都没写。</p><p>我觉得我还能解释一下：</p><ol><li>每个人的电脑环境不同，在安装这些软件过程中会遇到不同的问题，但这些问题怎么解决网上一查一大把，没必要写。</li><li>怎么安装这些软件他们的官网上都有文档，照着描就行了，忘记指令去官网看文档一目了然。</li></ol><p>如果我还有什么想说的话，大概有以下几句：</p><ol><li>安装了npm后，用npm安装cnpm。</li><li>把npm的资源库替换成淘宝镜像过来的库，以后用用到npm的地方用cnpm替代。</li><li>使用cnpm安装库的时候，如果用cnpm老出错，换成npm试试；反之亦然。</li></ol><p>以上三条意见仅给没有梯子的用户。</p><h2 id="其他环境搭建"><a href="#其他环境搭建" class="headerlink" title="其他环境搭建"></a>其他环境搭建</h2><p>其实我觉得开发者在什么地方开发挺重要的，比如电脑桌的高度，椅子的设计，电脑屏幕的亮度，键盘的回弹，胳膊肘的搭放，鼠标的点击，显示器的倾角，水杯的距离……等等等等</p><p>毕竟，我最想躺着玩电脑。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发环境很容易让新手误解，以为说的是我上班的地方环境是什么样子。其实我觉得这没什么问题，个体本身以外的一切都是环境，大到公司氛围，小到电脑和眼睛之间的距离都是开发环境。只是这样说不免使行家笑掉大牙，毕竟都是搞技术的牛人，倒立着都能开发，这些小事算得了什么。&lt;/p&gt;
&lt;p&gt;当然，工资这个环境还得另说。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>魔兽启示录</title>
    <link href="http://yoursite.com/2017/09/12/%E9%AD%94%E5%85%BD%E5%90%AF%E7%A4%BA%E5%BD%95/"/>
    <id>http://yoursite.com/2017/09/12/魔兽启示录/</id>
    <published>2017-09-12T04:22:51.000Z</published>
    <updated>2017-09-12T06:09:33.211Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>I&#39;m sick</title>
    <link href="http://yoursite.com/2017/09/12/I-m-sick/"/>
    <id>http://yoursite.com/2017/09/12/I-m-sick/</id>
    <published>2017-09-12T04:19:18.000Z</published>
    <updated>2017-09-12T04:36:16.895Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2017/09/09/hello-world/"/>
    <id>http://yoursite.com/2017/09/09/hello-world/</id>
    <published>2017-09-09T08:17:35.227Z</published>
    <updated>2017-09-12T04:29:28.458Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
